---
import type { ImageMetadata } from "astro";
import type { HTMLAttributes } from "astro/types";
import { Image } from "astro:assets";

interface Props extends HTMLAttributes<"img"> {
  src: string;
  alt?: string;
  height?: number;
  width?: number;
  href?: string;
  style?: string;
  position?: string;
  format?: string;
  fit?: string;
  priority?: boolean;
}

function getAltBySrc() {
  if (!src) return;
  const filename = src?.split("/").pop();
  const slug = filename && filename.split(".")[0];
  const unslugged = slug?.replace(/-/g, " ");
  return (unslugged as string) || ("" as string);
}

const { href, src, alt = getAltBySrc(), ...rest } = Astro.props;

let inPublic = false;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/images/**/*.{jpeg,jpg,png,gif,svg,avif,webp}"
);
if (!images[src]) {
  inPublic = true;
  // throw new Error(`"${src}" does not exist in glob: "src/assets/images/**/*.{jpeg,jpg,png,gif,svg,avif,webp}"`);
}
---

<figure>
  {
    // Render astro Image if in src/assets/images and wrap in a tag if href given
    inPublic ? (
      href ? (
        <a {href}>
          <img {src} {alt} {...rest} />
        </a>
      ) : (
        <img {src} {alt} {...rest} />
      )
    ) : href ? (
      <a href={href}>
        <Image src={images[src]()} alt={alt ?? ""} {...rest} />
      </a>
    ) : (
      <Image src={images[src]()} alt={alt ?? ""} {...rest} />
    )
  }
  <figcaption>{alt}</figcaption>
</figure>
